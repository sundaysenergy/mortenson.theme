// Generated by CoffeeScript 1.6.3
$(document).ready(function() {
  var anime_by_size, data, endpoint, index, make_id, new_slide, next_item, sec_per_slide, template, update;
  if (!window.make_id) {
    make_id = 'mortenson';
    console.log('No container_bucket variable found or it is false');
  } else {
    make_id = window.make_id;
  }
  endpoint = 'http://' + make_id + '.cape.io/_view/client_data/_output';
  endpoint = '/projects-full.json';
  index = 0;
  data = false;
  sec_per_slide = 5;
  anime_by_size = function(size) {
    switch (size) {
      case 1:
        return 'imageAnimationOne';
      case 3:
        return 'imageAnimationThree';
      case 4:
        return 'imageAnimationFour';
      case 5:
        return 'imageAnimationFive';
      case 6:
        return 'imageAnimationSix';
      case 7 || 8:
        return 'imageAnimationEight';
      case 9 || 10:
        return 'imageAnimationTen';
      case 11 || 12:
        return 'imageAnimationTwelve';
      default:
        return 'imageAnimationFifteen';
    }
  };
  update = function() {
    return $.getJSON(endpoint, function(new_data) {
      if (new_data) {
        console.log('Got json data.');
        data = new_data;
        return new_slide(index);
      } else {
        return console.log('NO DATA');
      }
    });
  };
  next_item = function() {
    var default_animation_name, images_count, item;
    item = data[index];
    if (!item) {
      console.log('Could not find item based on this index.');
      if (0 === index) {
        return false;
      } else {
        index = 0;
        item = next_item();
      }
    }
    if (!item.testimonial) {
      console.log('skiping ' + item.name);
      index = index + 1;
      item = next_item();
    }
    if (!item.images) {
      console.log('skipping ' + item.name);
      index = index + 1;
      item = next_item();
    }
    images_count = item.images.length;
    item.images_duration = sec_per_slide * images_count;
    default_animation_name = anime_by_size(images_count);
    item.images = _.map(item.images, function(image_source, i) {
      var img_obj;
      if (!_.isString(image_source)) {
        return image_source;
      }
      img_obj = {
        source: image_source,
        i: i,
        delay: i * sec_per_slide,
        animation_name: default_animation_name
      };
      if (i === 0) {
        img_obj.animation_name = 'imageAnimationFirst';
        img_obj.first = true;
      } else if (i === (images_count - 1)) {
        img_obj.animation_name = 'imageAnimationLast';
        img_obj.last = true;
      }
      return img_obj;
    });
    index = index + 1;
    return item;
  };
  new_slide = function() {
    var item;
    console.log('Generate slide ' + index);
    item = next_item();
    console.log(item);
    $('div#slideshow div.active').html(template.render(item));
    setTimeout(new_slide, item.images_duration * 1000);
  };
  template = Hogan.compile($('#slideshow-template').html());
  return update();
});
